##############################################################################
# We use the open source software for statistical analysis called R to summarize
# the AADT (Annual Average Daily Traffic) in a segment of PR-52 
# from 2002 to 2014 using available data in data.pr.gov.
#
# R or RStudio for Windows can be downloaded at: 
# https://cran.r-project.org/bin/windows/base/ o https://www.rstudio.com/products/rstudio/download3/
# This code ran on R 3.3.1 December, 2016. 
# If an error shows while running this code, verify the version of your data, R, 
# and necessary packages since changes in these may have occured.
# Also keep in mind that access to the internet is required to extract the data
# Created by: Hilda I. Calderon

# NOTE: Each line that starts with "#" R detects it as a comment

#We first create a function that checks if packages are installed, if they aren't, they installed and loaded. The function was originally provided at https://gist.github.com/stevenworthington/3178163
ipak <- function(pkg){
  new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
  if (length(new.pkg)) 
    install.packages(new.pkg, dependencies = TRUE)
  sapply(pkg, require, character.only = TRUE)
}

# load/install the necessary R packages for the case study.
packages <- c("RSocrata", "ggplot2", "dplyr", "leaflet") # This package is used to load the data from the portal data.pr.gov to R
ipak(packages) #Install or activates required packages

data <- read.socrata("https://data.pr.gov/Transportaci-n/Annual-Average-Daily-Traffic-AADT-Transito-Promedi/7kaq-zyym",stringsAsFactors=T) # Loads the AADT data from the portal

data$ANO = as.Date(data$ANO, format = "%m/%d/%Y") # "ANO" Variable format is changed to date format
data$ANO = format(data$ANO,format= "%Y")
data$ANO = as.factor(data$ANO) # The year is selected and the variable structure is changed from 'character' to 'factor'
data$PR. = as.factor(data$PR.) # The variable PR structure is changed from 'character' to 'factor'.

# Verifying if duplicates exist, i.e., rows with the same information for all variables.
data.dup <- data[duplicated(data) | duplicated(data, fromLast = TRUE), ]
View(data.dup[order(data.dup$DESCRIPCIÓN, data.dup$MUNICIPIO),c(1,2,6,7)]) # Shows where duplicates occurs

data <- data[!duplicated(data),]# Removes duplicates

carr = "52" # Choose the road that will be used
data.carr <- data[data$PR.==carr,] # Choose the rows for that road.
table(data.carr$ANO) # Number of measurements per year for the road
ggplot(data.carr, aes(x=as.integer(as.character(ANO)), y=KM)) + xlab("YEAR")+
  geom_point()  + theme_bw() + scale_x_continuous(breaks=seq(2002, 2014, 2)) # data between km 52 and km 57 for almost all the years (except 2008 and 2011). 
data.carr.seg <- data.carr[data.carr$KM<=57 & data.carr$KM>=52,] # data between km 52 and km 57 is selected
table(data.carr.seg$ANO) # Number of measurements for the observed segment 

# Localization map of km 52 and km 57 in PR-52
m <- leaflet() %>%
  addTiles() %>%
  addMarkers(lng=c(-66.2399770, -66.2149805), lat=c(18.0402770,18.0510969)) %>%
  addPopups(lng=c(-66.2399770, -66.2149805), lat=c(18.0402770,18.0510969),c("PR-52 Km 57","PR-52 Km 52"))
m  # Prints the map

# AADT plot in time for the desired road segment
data.carr.seg$ANO = as.integer(as.character(data.carr.seg$ANO)) # Change structure of variable "año" to integers
data.carr.seg$grp = ifelse(data.carr.seg$ANO<2008,  "a", ifelse(data.carr.seg$ANO<2011 & data.carr.seg$ANO>2008, "b", "c") ) # creates the gaps in missing year: 2008 and 2011.

ggplot(data.carr.seg, aes(x=as.integer(as.character(ANO)), y=AADT)) + geom_point() + theme_bw() + xlab("YEAR") + scale_x_continuous(breaks=seq(2002, 2014, 2)) + geom_line(aes(group=grp))+  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) # AADT Plot from 2002 to 2014
